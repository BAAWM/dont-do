{"ast":null,"code":"import _slicedToArray from\"/Users/chrismills/Dropbox/Work/frameworks/react/moz-todo-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";function usePrevious(value){var ref=useRef();useEffect(function(){ref.current=value;});return ref.current;}export default function Todo(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setEditing=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var editFieldRef=useRef(null);var editButtonRef=useRef(null);var wasEditing=usePrevious(isEditing);function handleChange(e){setNewName(e.target.value);}function handleSubmit(e){e.preventDefault();props.editTask(props.id,newName);setNewName(\"\");setEditing(false);}var editingTemplate=/*#__PURE__*/React.createElement(\"form\",{className:\"stack-small\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{className:\"todo-label\",htmlFor:props.id},\"New name for \",props.name),/*#__PURE__*/React.createElement(\"input\",{id:props.id,className:\"todo-text\",type:\"text\",value:newName,onChange:handleChange,ref:editFieldRef})),/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn todo-cancel\",onClick:function onClick(){return setEditing(false);}},\"Cancel\",/*#__PURE__*/React.createElement(\"span\",{className:\"visually-hidden\"},\"renaming \",props.name)),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn__primary todo-edit\"},\"Save\",/*#__PURE__*/React.createElement(\"span\",{className:\"visually-hidden\"},\"new name for \",props.name))));var viewTemplate=/*#__PURE__*/React.createElement(\"div\",{className:\"stack-small\"},/*#__PURE__*/React.createElement(\"div\",{className:\"c-cb\"},/*#__PURE__*/React.createElement(\"input\",{id:props.id,type:\"checkbox\",defaultChecked:props.completed,onChange:function onChange(){return props.toggleTaskCompleted(props.id);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"todo-label\",htmlFor:props.id},props.name)),/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn\",onClick:function onClick(){return setEditing(true);},ref:editButtonRef},\"Edit \",/*#__PURE__*/React.createElement(\"span\",{className:\"visually-hidden\"},props.name)),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn__danger\",onClick:function onClick(){return props.deleteTask(props.id);}},\"Delete \",/*#__PURE__*/React.createElement(\"span\",{className:\"visually-hidden\"},props.name))));useEffect(function(){if(!wasEditing&&isEditing){editFieldRef.current.focus();}if(wasEditing&&!isEditing){editButtonRef.current.focus();}},[wasEditing,isEditing]);return/*#__PURE__*/React.createElement(\"li\",{className:\"todo\"},isEditing?editingTemplate:viewTemplate);}","map":{"version":3,"sources":["/Users/chrismills/Dropbox/Work/frameworks/react/moz-todo-react/src/components/Todo.js"],"names":["React","useEffect","useRef","useState","usePrevious","value","ref","current","Todo","props","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","wasEditing","handleChange","e","target","handleSubmit","preventDefault","editTask","id","editingTemplate","name","viewTemplate","completed","toggleTaskCompleted","deleteTask","focus"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n"]},"metadata":{},"sourceType":"module"}