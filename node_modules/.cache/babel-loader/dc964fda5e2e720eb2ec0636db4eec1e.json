{"ast":null,"code":"var _jsxFileName = \"/Users/chrismills/Dropbox/Work/frameworks/react/moz-todo-react/src/App.js\";\nimport React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/React.createElement(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoapp stack-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters btn-group stack-exception\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, headingText), /*#__PURE__*/React.createElement(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, taskList));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chrismills/Dropbox/Work/frameworks/react/moz-todo-react/src/App.js"],"names":["React","useState","Form","FilterButton","Todo","nanoid","App","props","tasks","setTasks","toggleTaskCompleted","id","updatedTasks","map","task","completed","deleteTask","remainingTasks","filter","editTask","newName","editedTaskList","name","taskList","addTask","newTask","tasksNoun","length","headingText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks.map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}